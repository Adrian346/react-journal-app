{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/routers/AuthRouter.js","components/routers/PrivateRoute.js","components/routers/PublicRoute.js","components/routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","databaseURL","REACT_APP_databaseURL","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","measurementId","REACT_APP_measurementId","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","type","payload","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","removeError","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","console","log","JournalScreen","LoginScreen","ui","loading","msgError","isFormValid","validator","isEmail","length","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reduces","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1cbdf039.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth' \r\n\r\n// const firebaseConfig = {\r\n//     apiKey: \"AIzaSyDG9a3XFzA9lJPmRjx9ZrxFGFOsjkndhQ8\",\r\n//     authDomain: \"react-journal-app-497b1.firebaseapp.com\",\r\n//     projectId: \"react-journal-app-497b1\",\r\n//     storageBucket: \"react-journal-app-497b1.appspot.com\",\r\n//     messagingSenderId: \"183117553493\",\r\n//     appId: \"1:183117553493:web:f73c15a22501098ddb19dc\"\r\n// };\r\n\r\n// const firebaseConfigTesting = {\r\n//     apiKey: \"AIzaSyD6SLtZQClY7teeTnbo6alSYx-j8nAs3eU\",\r\n//     authDomain: \"react-test-f002a.firebaseapp.com\",\r\n//     databaseURL: \"https://react-test-f002a-default-rtdb.firebaseio.com\",\r\n//     projectId: \"react-test-f002a\",\r\n//     storageBucket: \"react-test-f002a.appspot.com\",\r\n    // messagingSenderId: \"492304644236\",\r\n//     appId: \"1:492304644236:web:0116f6209e81c4063623a9\",\r\n//     measurementId: \"G-YTJC74GXYS\"\r\n// };\r\n\r\n//   if( process.env.NODE_ENV === 'test' ){\r\n//       firebase.initializeApp(firebaseConfigTesting);\r\n//   } else {\r\n//       // Initialize Firebase\r\n//       firebase.initializeApp(firebaseConfig);\r\n//   }\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    databaseURL: process.env.REACT_APP_databaseURL,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId,\r\n    measurementId: process.env.REACT_APP_measurementId\r\n}\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore()\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }","\r\nexport const types = {\r\n    \r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    \r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note saved',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\r\n\r\n}","\r\n\r\nexport const fileUpload = async( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/drxvgz00g/upload'\r\n\r\n    const formData = new FormData()\r\n    formData.append('upload_preset', 'react-journal')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json()\r\n            return cloudResp.secure_url\r\n        } else {\r\n            // throw await resp.json()\r\n            return null\r\n        }\r\n    } catch(error){\r\n        throw error\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get()\r\n    const notes = []\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n    return notes\r\n}","import Swal from \"sweetalert2\"\r\nimport { db } from \"../firebase/firebase-config\"\r\nimport { fileUpload } from \"../helpers/fileUpload\"\r\nimport { loadNotes } from \"../helpers/loadNotes\"\r\nimport { types } from \"../types/types\"\r\n\r\n// react-journal\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        try {\r\n            const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n    \r\n            dispatch( activeNote(doc.id, newNote) )\r\n            dispatch( addNewNote(doc.id, newNote)  )\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    } \r\n})\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async(dispatch) => {\r\n        const notes = await loadNotes(uid)\r\n        dispatch(setNotes(notes))\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } =getState().auth\r\n\r\n        if(!note.url){\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = {...note}\r\n        delete noteToFirestore.id\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\r\n        dispatch( refreshNote( note.id, noteToFirestore ) )\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n    return async(dispatch, getState) => {\r\n        const { active:activeNote } =getState().notes\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n        \r\n        const fileUrl = await fileUpload( file )\r\n        activeNote.url = fileUrl\r\n\r\n        dispatch( startSaveNote( activeNote ) )\r\n\r\n        Swal.close()\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete()\r\n\r\n        dispatch( deleteNote(id) )\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import Swal from 'sweetalert2'\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\r\nimport { types } from \"../types/types\"\r\nimport { noteLogout } from './notes'\r\nimport { finishLoading, startLoading } from './ui'\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading())\r\n        return firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n                dispatch(finishLoading())\r\n            })\r\n            .catch( e => {\r\n                dispatch(finishLoading())\r\n                Swal.fire('Error', e.message, 'error')\r\n            })    \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async ({ user }) => {\r\n\r\n                await user.updateProfile({displayName: name })\r\n\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            })\r\n            .catch( e => {\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    \r\n    return (dispatch) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n})\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut()\r\n        \r\n        dispatch(logout())\r\n        dispatch(noteLogout())\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues(newFormState)\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        })\r\n    }\r\n\r\n    return [\r\n        values, \r\n        handleInputChange,\r\n        reset\r\n    ]\r\n     \r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startUploading, startSaveNote } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote(active) )\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector(\"#fileSelector\").click()\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]\r\n        if(file){\r\n            dispatch( startUploading( file ) )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n\r\n            <span>28 de Agosto de 2021</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={ handleFileChange } \r\n            />\r\n            \r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const { active:note } = useSelector(state => state.notes)\r\n    const [ formValues, handleInputChange, reset ] = useForm(note)\r\n    const { body, title, id } = formValues\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        \r\n        if(activeNote.current !== note.id){\r\n            reset(note)\r\n            activeNote.current = note.id\r\n        }\r\n\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, {...formValues} ) )\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) )\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value ={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) \r\n                    &&\r\n                        (<div className=\"notes__image\">\r\n                            <img \r\n                                src={ note.url }\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>)\r\n                }\r\n\r\n            </div>\r\n\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Selected something\r\n                <br/>\r\n                pr create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activeNote } from '../../actions/notes'\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = () => {\r\n        dispatch(\r\n            activeNote(id, {\r\n                date, title, body, url\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate_faster\"\r\n            onClick={ handleClick }\r\n        >\r\n            \r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${ url })`\r\n                    }}\r\n                ></div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span> { noteDate.format('dddd') } </span>\r\n                <h4> { noteDate.format('Do') } </h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id } \r\n                        { ...note }    \r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { startNewNote } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote())\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name } </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries/>\r\n            \r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate_faster\">\r\n\r\n            <Sidebar/>\r\n            \r\n            <main>\r\n                {\r\n                    (active)\r\n                    ? (<NoteScreen/>)\r\n                    : (<NothingSelected/>)\r\n                    \r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { setError, removeError } from '../../actions/ui'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { loading, msgError } = useSelector( state => state.ui )\r\n\r\n    const [ formValues, handleInputChange] = useForm({\r\n        email: 'adrian@gmail.com',\r\n        password: '123456'\r\n    })\r\n\r\n    const { email, password } = formValues\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        if( isFormValid() ) {\r\n            dispatch(startLoginEmailPassword(email, password))\r\n        }\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        if( isFormValid() ) {\r\n            dispatch(startGoogleLogin())\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( !validator.isEmail( email ) ){\r\n            dispatch(setError('Email is not valid'))\r\n            return false\r\n        } else if( password.length < 5 ){\r\n            dispatch(setError('Password should be at least 6 characters'))\r\n            return false\r\n        }\r\n\r\n        dispatch(removeError())\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={ handleLogin }\r\n                className=\"animate__animated animate__fadeIn animate_faster\"\r\n            >\r\n\r\n                {\r\n                    msgError && \r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <hr/>\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social network</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport validator from 'validator'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { msgError } = useSelector( state => state.ui )\r\n\r\n    const [formValues, handleInputChange ] = useForm({\r\n        name: 'Adrian',\r\n        email: 'adrian@gmail.com',\r\n        password: '123456',\r\n        password2:'123456'\r\n    })\r\n\r\n    const { name, email, password, password2} = formValues\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n        if( isFormValid() ) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length === 0 ){\r\n            dispatch(setError('Name is required'))\r\n            return false\r\n        } else if( !validator.isEmail( email ) ){\r\n            dispatch(setError('Email is not valid'))\r\n            return false\r\n        } else if( password !== password2 || password.length < 5 ){\r\n            dispatch(setError('Password should be at least 6 characters and match each other'))\r\n            return false\r\n        }\r\n\r\n        dispatch(removeError())\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={ handleRegister }\r\n                className=\"animate__animated animate__fadeIn animate_faster\"\r\n            >\r\n\r\n                {\r\n                    msgError && \r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>                \r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { LoginScreen } from '../auth/LoginScreen'\r\nimport { RegisterScreen } from '../auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n            \r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component= { LoginScreen } />\r\n                    <Route exact path=\"/auth/register\" component= { RegisterScreen } />\r\n                    \r\n                    <Redirect to=\"/auth/login\"/>\r\n                </Switch>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                ? ( <Component {...props} /> )\r\n                : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        >\r\n            \r\n        </Route>\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n} ","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                ? ( <Redirect to=\"/\" /> )\r\n                : ( <Component {...props} /> )\r\n            )}\r\n        >\r\n            \r\n        </Route>\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { \r\n    BrowserRouter as Router,\r\n    Redirect,\r\n    Switch \r\n} from 'react-router-dom'\r\nimport { login } from '../../actions/auth'\r\nimport { startLoadingNotes } from '../../actions/notes'\r\nimport { firebase } from '../../firebase/firebase-config'\r\nimport { JournalScreen } from '../journal/JournalScreen'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [ checking, setChecking ] = useState(true)\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false)\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n            if( user?.uid ){\r\n                dispatch( login( user.uid, user.displayName ) )\r\n                setIsLoggedIn(true)\r\n\r\n                dispatch(startLoadingNotes(user.uid))\r\n            } else {\r\n                setIsLoggedIn(false)\r\n            }\r\n            setChecking(false)\r\n        })\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n    if(checking){\r\n        return (\r\n            <h3>Wait...</h3>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    \r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                        isAuthenticated={ isLoggedIn }\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={ JournalScreen }\r\n                        isAuthenticated={ isLoggedIn } \r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\"/>\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad: \r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state, \r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes:state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n\r\n            return {\r\n                ...state,\r\n                msgError: action.payload \r\n            }\r\n\r\n        case types.uiRemoveError:\r\n\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { authReducer } from '../reducers/authReducer'\r\nimport { notesReducer } from '../reducers/notesReducer'\r\nimport { uiReducer } from '../reducers/uiReducer'\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\r\n\r\nconst reduces = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reduces,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n        case types.logout:\r\n\r\n            return { }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { AppRouter } from './components/routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return ( \r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss'\n\nReactDOM.render(\n    <JournalApp/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}